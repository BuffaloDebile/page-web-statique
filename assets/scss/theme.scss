/*************************** Theme Colours****************************/
// Define theme colour scheme
$theme-color-primary: #2937f0;
$theme-color-secondary: #EC645E;
$theme-text-color-primary: #141c25;
$theme-text-color-secondary: lighten($theme-text-color-primary, 25%);
$theme-text-color-light: lighten($theme-text-color-primary, 40%);
$theme-bg-light: #f0f6fa;
$theme-bg-primary: $theme-color-primary;
$theme-bg-dark: $theme-text-color-primary;
$theme-border-color:  #e5ecf4;
$theme-color-tick: #5ab66e;
$smoky-white: #f5f5f5;
$single-col-max: 800px;

/*************************** Variables Section. *****************************/
// Create variables to override the default value for variables used in the Bootstrap SCSS files.

$gray-100: lighten($theme-text-color-secondary, 65%);
$gray-200: lighten($theme-text-color-secondary, 55%);
$gray-300: lighten($theme-text-color-secondary, 50%);
$gray-400: lighten($theme-text-color-secondary, 45%);
$gray-500: lighten($theme-text-color-secondary, 40%);
$gray-600: lighten($theme-text-color-secondary, 30%);
$gray-700: lighten($theme-text-color-secondary, 20%);
$gray-800: lighten($theme-text-color-secondary, 10%);
$gray-900: $theme-text-color-primary;


/* Override BS5 sass color */
$primary: $theme-color-primary;
$secondary: $theme-text-color-secondary;

/*************************** Import Bootstrap  *****************************/
@import "bootstrap/scss/bootstrap.scss";


/*************************** Theme Styles Section ****************************/
@import "theme/styles.scss";



.form-check {
    display: block;
    min-height: $form-check-min-height;
    padding-left: $form-check-padding-start;
    margin-bottom: $form-check-margin-bottom;
  
    .form-check-input {
      float: left;
      margin-left: $form-check-padding-start * -1;
    }
  }
  
  .form-check-input {
    width: $form-check-input-width;
    height: $form-check-input-width;
    margin-top: ($line-height-base - $form-check-input-width) * .5; // line-height minus check height
    vertical-align: top;
    background-color: $form-check-input-bg;
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;
    border: $form-check-input-border;
    appearance: none;
    color-adjust: exact; // Keep themed appearance for print
    @include transition($form-check-transition);
  
    &[type="checkbox"] {
      @include border-radius($form-check-input-border-radius);
    }
  
    &[type="radio"] {
      // stylelint-disable-next-line property-disallowed-list
      border-radius: $form-check-radio-border-radius;
    }
  
    &:active {
      filter: $form-check-input-active-filter;
    }
  
    &:focus {
      border-color: $form-check-input-focus-border;
      outline: 0;
      box-shadow: $form-check-input-focus-box-shadow;
    }
  
    &:checked {
      background-color: $form-check-input-checked-bg-color;
      border-color: $form-check-input-checked-border-color;
  
      &[type="checkbox"] {
        @if $enable-gradients {
          background-image: escape-svg($form-check-input-checked-bg-image), var(--#{$variable-prefix}gradient);
        } @else {
          background-image: escape-svg($form-check-input-checked-bg-image);
        }
      }
  
      &[type="radio"] {
        @if $enable-gradients {
          background-image: escape-svg($form-check-radio-checked-bg-image), var(--#{$variable-prefix}gradient);
        } @else {
          background-image: escape-svg($form-check-radio-checked-bg-image);
        }
      }
    }
  
    &[type="checkbox"]:indeterminate {
      background-color: $form-check-input-indeterminate-bg-color;
      border-color: $form-check-input-indeterminate-border-color;
  
      @if $enable-gradients {
        background-image: escape-svg($form-check-input-indeterminate-bg-image), var(--#{$variable-prefix}gradient);
      } @else {
        background-image: escape-svg($form-check-input-indeterminate-bg-image);
      }
    }
  
    &:disabled {
      pointer-events: none;
      filter: none;
      opacity: $form-check-input-disabled-opacity;
    }
  
    // Use disabled attribute in addition of :disabled pseudo-class
    // See: https://github.com/twbs/bootstrap/issues/28247
    &[disabled],
    &:disabled {
      ~ .form-check-label {
        opacity: $form-check-label-disabled-opacity;
      }
    }
  }
  
  .form-check-label {
    color: $form-check-label-color;
    cursor: $form-check-label-cursor;
  }
  
  //
  // Switch
  //
  
  .form-switch {
    padding-left: $form-switch-padding-start;
  
    .form-check-input {
      width: $form-switch-width;
      margin-left: $form-switch-padding-start * -1;
      background-image: escape-svg($form-switch-bg-image);
      background-position: left center;
      @include border-radius($form-switch-border-radius);
      @include transition($form-switch-transition);
  
      &:focus {
        background-image: escape-svg($form-switch-focus-bg-image);
      }
  
      &:checked {
        background-position: $form-switch-checked-bg-position;
  
        @if $enable-gradients {
          background-image: escape-svg($form-switch-checked-bg-image), var(--#{$variable-prefix}gradient);
        } @else {
          background-image: escape-svg($form-switch-checked-bg-image);
        }
      }
    }
  }
  
  .form-check-inline {
    display: inline-block;
    margin-right: $form-check-inline-margin-end;
  }
  
  .btn-check {
    position: absolute;
    clip: rect(0, 0, 0, 0);
    pointer-events: none;
  
    &[disabled],
    &:disabled {
      + .btn {
        pointer-events: none;
        filter: none;
        opacity: $form-check-btn-check-disabled-opacity;
      }
    }
  }
  
  form-select {
    display: block;
    width: 100%;
    padding: $form-select-padding-y $form-select-indicator-padding $form-select-padding-y $form-select-padding-x;
    // stylelint-disable-next-line property-no-vendor-prefix
    -moz-padding-start: subtract($form-select-padding-x, 3px); // See https://github.com/twbs/bootstrap/issues/32636
    font-family: $form-select-font-family;
    @include font-size($form-select-font-size);
    font-weight: $form-select-font-weight;
    line-height: $form-select-line-height;
    color: $form-select-color;
    background-color: $form-select-bg;
    background-image: escape-svg($form-select-indicator);
    background-repeat: no-repeat;
    background-position: $form-select-bg-position;
    background-size: $form-select-bg-size;
    border: $form-select-border-width solid $form-select-border-color;
    @include border-radius($form-select-border-radius, 0);
    @include box-shadow($form-select-box-shadow);
    @include transition($form-select-transition);
    appearance: none;
  
    &:focus {
      border-color: $form-select-focus-border-color;
      outline: 0;
      @if $enable-shadows {
        @include box-shadow($form-select-box-shadow, $form-select-focus-box-shadow);
      } @else {
        // Avoid using mixin so we can pass custom focus shadow properly
        box-shadow: $form-select-focus-box-shadow;
      }
    }
  
    &[multiple],
    &[size]:not([size="1"]) {
      padding-right: $form-select-padding-x;
      background-image: none;
    }
  
    &:disabled {
      color: $form-select-disabled-color;
      background-color: $form-select-disabled-bg;
      border-color: $form-select-disabled-border-color;
    }
  
    // Remove outline from select box in FF
    &:-moz-focusring {
      color: transparent;
      text-shadow: 0 0 0 $form-select-color;
    }
  }
  
  .form-select-sm {
    padding-top: $form-select-padding-y-sm;
    padding-bottom: $form-select-padding-y-sm;
    padding-left: $form-select-padding-x-sm;
    @include font-size($form-select-font-size-sm);
  }
  
  .form-select-lg {
    padding-top: $form-select-padding-y-lg;
    padding-bottom: $form-select-padding-y-lg;
    padding-left: $form-select-padding-x-lg;
    @include font-size($form-select-font-size-lg);
  }
  

  
.input-group {
    position: relative;
    display: flex;
    flex-wrap: wrap; // For form validation feedback
    align-items: stretch;
    width: 100%;
  
    > .form-control,
    > .form-select {
      position: relative; // For focus state's z-index
      flex: 1 1 auto;
      width: 1%;
      min-width: 0; // https://stackoverflow.com/questions/36247140/why-dont-flex-items-shrink-past-content-size
    }
  
    // Bring the "active" form control to the top of surrounding elements
    > .form-control:focus,
    > .form-select:focus {
      z-index: 3;
    }
  
    // Ensure buttons are always above inputs for more visually pleasing borders.
    // This isn't needed for `.input-group-text` since it shares the same border-color
    // as our inputs.
    .btn {
      position: relative;
      z-index: 2;
  
      &:focus {
        z-index: 3;
      }
    }
  }
  
  
  // Textual addons
  //
  // Serves as a catch-all element for any text or radio/checkbox input you wish
  // to prepend or append to an input.
  
  .input-group-text {
    display: flex;
    align-items: center;
    padding: $input-group-addon-padding-y $input-group-addon-padding-x;
    @include font-size($input-font-size); // Match inputs
    font-weight: $input-group-addon-font-weight;
    line-height: $input-line-height;
    color: $input-group-addon-color;
    text-align: center;
    white-space: nowrap;
    background-color: $input-group-addon-bg;
    border: $input-border-width solid $input-group-addon-border-color;
    @include border-radius($input-border-radius);
  }
  
  
  // Sizing
  //
  // Remix the default form control sizing classes into new ones for easier
  // manipulation.
  
  .input-group-lg > .form-control,
  .input-group-lg > .form-select,
  .input-group-lg > .input-group-text,
  .input-group-lg > .btn {
    padding: $input-padding-y-lg $input-padding-x-lg;
    @include font-size($input-font-size-lg);
    @include border-radius($input-border-radius-lg);
  }
  
  .input-group-sm > .form-control,
  .input-group-sm > .form-select,
  .input-group-sm > .input-group-text,
  .input-group-sm > .btn {
    padding: $input-padding-y-sm $input-padding-x-sm;
    @include font-size($input-font-size-sm);
    @include border-radius($input-border-radius-sm);
  }
  
  .input-group-lg > .form-select,
  .input-group-sm > .form-select {
    padding-right: $form-select-padding-x + $form-select-indicator-padding;
  }
  
  
  // Rounded corners
  //
  // These rulesets must come after the sizing ones to properly override sm and lg
  // border-radius values when extending. They're more specific than we'd like
  // with the `.input-group >` part, but without it, we cannot override the sizing.
  
  // stylelint-disable-next-line no-duplicate-selectors
  .input-group {
    &:not(.has-validation) {
      > :not(:last-child):not(.dropdown-toggle):not(.dropdown-menu),
      > .dropdown-toggle:nth-last-child(n + 3) {
        @include border-end-radius(0);
      }
    }
  
    &.has-validation {
      > :nth-last-child(n + 3):not(.dropdown-toggle):not(.dropdown-menu),
      > .dropdown-toggle:nth-last-child(n + 4) {
        @include border-end-radius(0);
      }
    }
  
    $validation-messages: "";
    @each $state in map-keys($form-validation-states) {
      $validation-messages: $validation-messages + ":not(." + unquote($state) + "-tooltip)" + ":not(." + unquote($state) + "-feedback)";
    }
  
    > :not(:first-child):not(.dropdown-menu)#{$validation-messages} {
      margin-left: -$input-border-width;
      @include border-start-radius(0);
    }
  }
  
